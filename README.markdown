# About

A fork of my [petstore](https://github.com/testinfected/petstore) repository, but built with simple tools and no IoC container.

The intention is to progressively refactor the [petstore](https://github.com/testinfected/petstore) to get rid of Spring Core, Spring MVC, Hibernate and Maven.

I have in mind to use the following tools:

- [Simpleframework](http://www.simpleframework.org/) to replace Spring MVC
- A simple templating engine (mustache)
- Plain JDBC to replace Hibernate
- No IoC container to replace Spring Core
- [Buildr](http://buildr.apache.org) to replace Maven

This is a work in progress.

## Building

To build the application, I use rvm with ruby-1.8.7-p334 with Buildr 1.4.8. I guess it should work fine with ruby 1.9.2 as well, though you won't get growl notifications on OSX (RubyCocoa does not support ruby-1.9).

Buildr 1.4.8 supports Java 7.

To install Buildr, follow Buildr installation [instructions](http://buildr.apache.org/installing.html).

To build and run all tests, ue:

`buildr package`

## Running

To run the new (simple) application, from the top-level directory use:

`buildr run`

To run the old (spring) application, from the oldapp directory use:

`buildr jetty`

## IntelliJ
If you use IntelliJ, you can generate your project using:

`buildr idea`

Once you have generated the project files, you'll have to tweak the module configuration.

For each module, add as a the first dependencies in the list the following classes directories:

- $MODULE_DIR$/target/resources (scope compile - select to export)
- $MODULE_DIR$/target/test/resources (scope test - select to export)

This is because Buildr generates resources files in separate directories, which are not included in the module classpath.

We need to make them the very first dependencies so that they take precedence over the non-filtered files generated by IntelliJ.